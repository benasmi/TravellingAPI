<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.travelapi.services.PlaceService">

    <select id="selectAll"  resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE
    </select>

    <select id="selectByCategoryAndLocation" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE p RIGHT JOIN CATEGORY_PLACE cp ON cp.fk_placeId = p.placeId AND cp.fk_categoryId = #{categoryId} WHERE ${locationType}=#{location}
    </select>

    <select id="matchPlacesByLocation" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT name, averageTimeSpent, address, country, city, county, municipality, price, placeId, description, latitude, longitude, price FROM PLACE WHERE ${locationType}=#{location} AND isVerified = true AND isPublic = true
        <if test="distanceMax != null">
            AND getDistance(${sourceLat}, ${sourceLon}, latitude, longitude) &lt; #{distanceMax}
        </if>
    </select>

    <select id="search" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE WHERE placeId IN
        <foreach item='item' index='index' collection='ids' open='(' separator=',' close=')'>
            #{item}
        </foreach>
    </select>

    <select id="getPlaceLocation" resultType="com.travel.travelapi.models.Location">
        SELECT latitude, longitude FROM PLACE WHERE placeId=#{id}
    </select>
    <select id="searchClient" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT name, averageTimeSpent, address, country, city, county, municipality, price, placeId, latitude, longitude FROM PLACE p WHERE isPublic = 1 AND isVerified = 1 AND MATCH (name,description,city,country) AGAINST (CONCAT(#{keyword},'*') IN BOOLEAN MODE) LIMIT 8
    </select>


    <select id="selectPlacesInRadius" resultType="com.travel.travelapi.models.PlaceLocal">
     SELECT *, ( 6371 * acos( cos( radians(#{latitude}) ) * cos( radians( latitude ) )* cos( radians( longitude ) - radians(#{longitude}) ) + sin( radians(#{latitude}) ) * sin(radians(latitude)) ) )
     AS distance FROM PLACE WHERE isPublic=1 AND isVerified=1 HAVING distance &lt; #{range} ORDER BY distance LIMIT #{limit}
    </select>


    <select id="selectAllAdmin" resultType="com.travel.travelapi.models.PlaceLocal">
        <if test="location.size() != 0">
            SELECT *, ( 6371 * acos( cos( radians(#{location[0]}) ) * cos( radians( latitude ) )* cos( radians( longitude ) - radians(#{location[1]}) ) + sin( radians(#{location[0]}) ) * sin(radians(latitude)) ) ) AS distance FROM PLACE
        </if>
        <if test="location.size() == 0">
            SELECT * FROM PLACE
        </if>
        <if test="keyword!= ''">
            WHERE MATCH (name) AGAINST (CONCAT(#{keyword},'*') IN BOOLEAN MODE)
        </if>
        <if test="keyword== ''">
            WHERE 1
        </if>
        <if test="filterMunicipalities.size() != 0">
            AND municipality IN
            <foreach item='item' index='index' collection='filterMunicipalities' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>

        <if test="filterCities.size() != 0">
            AND city IN
            <foreach item='item' index='index' collection='filterCities' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>

        <if test="filterCountries.size() != 0">
            AND country IN
            <foreach item='item' index='index' collection='filterCountries' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>

        <foreach item='item' index='index' collection='filterOptions'>
            <if test="item == 'unverified'">
                AND isVerified=0
            </if>
            <if test="item == 'unpublished'">
                AND isPublic=0
            </if>
            <if test="item == 'verified'">
                AND isVerified=1
            </if>
            <if test="item == 'published'">
                AND isPublic=1
            </if>
        </foreach>

        <if test="filterCategories.size() != 0">
            AND placeId IN (SELECT cp.fk_placeId FROM CATEGORY c INNER JOIN CATEGORY_PLACE cp ON c.categoryId =
            cp.fk_categoryId
            WHERE c.name IN
            <foreach item='item' index='index' collection='filterCategories' open='(' separator=',' close=')'>
                #{item}
            </foreach>)
        </if>
        <if test="filterDateAdded.size() == 2">
                AND timeAdded BETWEEN #{filterDateAdded[0]} AND #{filterDateAdded[1]}
        </if>
        <if test="filterDateModified.size() == 2">
            AND dateModified BETWEEN #{filterDateModified[0]} AND #{filterDateModified[1]}
        </if>

        <if test="location.size() != 0">
            HAVING distance &lt; #{range} ORDER BY distance ASC, dateModified DESC
        </if>
        <if test="keyword!= ''">
            ORDER BY levenshtein(name, #{keyword})
        </if>
        <if test="location.size() == 0">
            <if test="keyword!=''">
                , dateModified DESC
            </if>
            <if test="keyword==''">
                ORDER BY dateModified DESC
            </if>
        </if>

    </select>

    <select id="selectById" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE WHERE placeId=#{id}
    </select>

    <update id="updatePlace" >
        UPDATE PLACE SET county=#{p.county}, bookInAdvance=#{p.bookInAdvance}, municipality=#{p.municipality}, averageTimeSpent=#{p.averageTimeSpent}, price=#{p.price}, name=#{p.name}, description=#{p.description}, city=#{p.city}, country=#{p.country}, latitude=#{p.latitude},
        longitude=#{p.longitude}, address=#{p.address}, phoneNumber=#{p.phoneNumber}, website=#{p.website}, hasSchedule=#{p.hasSchedule}, isPublic=#{p.isPublic}, isVerified=#{p.isVerified}
        WHERE placeId=#{p.placeId}
    </update>

    <insert id="insertPlace" useGeneratedKeys="true" keyProperty="placeId" keyColumn="placeId">
        INSERT INTO PLACE (price, name, description, averageTimeSpent, latitude, longitude, address, country, city, phoneNumber, website, hasSchedule, isVerified, isPublic, county, municipality, userId, bookInAdvance)
        VALUES (#{p.price},#{p.name},#{p.description}, #{p.averageTimeSpent}, #{p.latitude}, #{p.longitude}, #{p.address}, #{p.country}, #{p.city}, #{p.phoneNumber}, #{p.website}, #{p.hasSchedule}, #{p.isVerified}, #{p.isPublic}, #{p.county},#{p.municipality}, #{p.userId}, #{p.bookInAdvance})
    </insert>

    <delete id="deletePlace">
        DELETE FROM PLACE WHERE placeId=#{id}
    </delete>

    <select id="getAllCities" resultType="string">
        SELECT DISTINCT city FROM PLACE WHERE 1 AND (city IS NOT NULL AND city != '' )
        <if test="munRestrictions.size() != 0">
            AND municipality IN
            <foreach item='item' index='index' collection='munRestrictions' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>
        <if test="countryRestrictions.size() != 0">
            AND country IN
            <foreach item='item' index='index' collection='countryRestrictions' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>
        ORDER BY city
    </select>

    <select id="getAllCountries" resultType="string">
        SELECT DISTINCT country FROM PLACE WHERE 1 AND (country IS NOT NULL AND country != '' ) ORDER BY country
    </select>

    <select id="getAllCounties" resultType="string">
        SELECT DISTINCT county FROM PLACE WHERE 1 AND (county IS NOT NULL AND county != '' ) ORDER BY county
    </select>

    <select id="getAllMunicipalities" resultType="string">
        SELECT DISTINCT municipality FROM PLACE WHERE 1 AND (municipality IS NOT NULL AND municipality != '' )
        <if test="restrictions.size() != 0">
            AND country IN
            <foreach item='item' index='index' collection='restrictions' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>
        ORDER BY municipality
    </select>
</mapper>