<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.travelapi.services.PlaceService">


    <select id="selectAll"  resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE
    </select>

    <select id="search" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE WHERE placeId IN
        <foreach item='item' index='index' collection='ids' open='(' separator=',' close=')'>
            #{item}
        </foreach>
    </select>



    <select id="selectAllAdmin" resultType="com.travel.travelapi.models.PlaceLocal">
        <if test="keyword!= ''">
            SELECT * FROM PLACE WHERE MATCH (name,description,city,country) AGAINST (CONCAT(#{keyword},'*') IN BOOLEAN MODE)
        </if>

        <if test="keyword == ''">
            SELECT * FROM PLACE WHERE 1
        </if>
        <foreach item='item' index='index' collection='filterOptions'>
            <if test="item == 'unverified'">
                AND isVerified=0
            </if>
            <if test="item == 'unpublished'">
                AND isPublic=0
            </if>
        </foreach>
    ORDER BY dateModified DESC
    </select>

    <select id="selectById" resultType="com.travel.travelapi.models.PlaceLocal">
        SELECT * FROM PLACE WHERE placeId=#{id}
    </select>

    <update id="updatePlace" >
        UPDATE PLACE SET averageTimeSpent=#{p.averageTimeSpent}, price=#{p.price}, name=#{p.name}, description=#{p.description}, city=#{p.city}, country=#{p.country}, latitude=#{p.latitude},
        longitude=#{p.longitude}, address=#{p.address}, phoneNumber=#{p.phoneNumber}, website=#{p.website}, hasSchedule=#{p.hasSchedule}, isPublic=#{p.isPublic}, isVerified=#{p.isVerified}
        WHERE placeId=#{p.placeId}
    </update>

    <insert id="insertPlace" useGeneratedKeys="true" keyProperty="placeId" keyColumn="placeId">
        INSERT INTO PLACE (price, name, description, averageTimeSpent, latitude, longitude, address, country, city, phoneNumber, website, hasSchedule, isVerified, isPublic)
        VALUES (#{p.price},#{p.name},#{p.description}, #{p.averageTimeSpent}, #{p.latitude}, #{p.longitude}, #{p.address}, #{p.country}, #{p.city}, #{p.phoneNumber}, #{p.website}, #{p.hasSchedule}, #{p.isVerified}, #{p.isPublic})
    </insert>

    <delete id="deletePlace">
        DELETE FROM PLACE WHERE placeId=#{id}
    </delete>
</mapper>